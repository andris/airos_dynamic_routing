--- a/src/echo.c
+++ b/src/echo.c
@@ -478,7 +478,7 @@ typedef struct php_extra_ents {
 	char str[6];
 } php_extra_ents;
 
-void HtmlSpecialChars(void) {
+void HtmlEntities(void) {
 	Stack *s;
 	int i;
 	char lookfor[2];
@@ -531,3 +531,84 @@ void HtmlSpecialChars(void) {
 	}
 	Push(work,STRING);
 }
+
+/* simplified HtmlSpecialChars - it's sufficient to escape
+ * &,",<,>
+ */
+static char*
+php_htmlspecialchars(const char* s) {
+	unsigned int i, len, maxlen;
+	char* str;
+	char* p;
+	const char* ch;
+
+	if (!s || !*s)
+		return NULL;
+
+	len = strlen(s);
+	maxlen = len;
+	/* unfortunately, we do not have erealloc(), hence lets calculate
+	 * the size needed for new string */
+	for (i = 0; i < len; ++i) {
+		switch (*(s + i)) {
+		case 38: /* &amp; */
+			maxlen += 5;
+			break;
+		case 34: /* &quot; */
+			maxlen += 6;
+			break;
+		case 60: /* &lt; */
+		case 62: /* &gt; */
+			maxlen += 4;
+			break;
+		}
+	}
+	str = emalloc(1, maxlen + 1);
+	memset(str, 0, maxlen + 1);
+	ch = s;
+	p = str;
+	for (i = 0; i < len; ++i, ++ch) {
+		switch (*ch) {
+		case 38: /* &amp; */
+			strcpy(p, "&amp;");
+			p += 5;
+			break;
+		case 34: /* &quot; */
+			strcpy(p, "&quot;");
+			p += 6;
+			break;
+		case 60: /* &lt; */
+			strcpy(p, "&lt;");
+			p += 4;
+			break;
+		case 62: /* &gt; */
+			strcpy(p, "&gt;");
+			p += 4;
+			break;
+		default:
+			*p = *ch;
+			p++;
+		}
+	}
+	str[maxlen] = '\0';
+	return str;
+}
+
+void HtmlSpecialChars(void) {
+	char *str;
+	Stack* s;
+
+	s = Pop();
+	if (!s) {
+		Error("Stack Error in htmlspecialchars function");
+		return;
+	}
+	if(!*s->strval) {
+		Push("",STRING);
+		return;
+	}
+
+	str = php_htmlspecialchars(s->strval);
+	Push(str, STRING);
+}
+
--- a/src/lex.c
+++ b/src/lex.c
@@ -451,6 +451,7 @@ static const cmd_table_t cmd_table[PHP_M
 	  { NULL,0,NULL } },
 
 	{ { "getlastemail", INTFUNC0,GetLastEmail }, /* 12 */
+	  { "htmlentities", INTFUNC1,HtmlEntities},
 	  { "ereg_replace", INTFUNC3,ERegReplace },
 #ifdef HAVE_LIBMSQL
 	  { "msql_connect", INTFUNC1,MsqlConnect },
--- a/src/php.h
+++ b/src/php.h
@@ -753,6 +753,7 @@ void StripDollarSlashes(char *);
 char *AddSlashes(char *, int);
 void ParseEscapes(char *);
 void HtmlSpecialChars(void);
+void HtmlEntities(void);
 int FormatCheck(char **, char **, char **);
 void _AddSlashes(void);
 void _StripSlashes(void);
