--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -38,6 +38,8 @@
 #include "ieee802_11_defs.h"
 #include "blacklist.h"
 #include "wpas_glue.h"
+#include <sys/types.h>
+#include <dirent.h>
 
 const char *wpa_supplicant_version =
 "wpa_supplicant v" VERSION_STR "\n"
@@ -459,6 +461,16 @@ const char * wpa_supplicant_state_txt(in
 	}
 }
 
+static void send_signal(const char* pidfile, int sig) {
+        FILE* f = fopen(pidfile, "r");
+        if (f) {
+                pid_t pid = 0;
+                fscanf(f, "%u", &pid);
+                fclose(f);
+                if (pid)
+                        kill(pid, sig);
+        }
+}
 
 /**
  * wpa_supplicant_set_state - Set current connection state
@@ -487,6 +499,34 @@ void wpa_supplicant_set_state(struct wpa
 			ssid ? ssid->id : -1,
 			ssid && ssid->id_str ? ssid->id_str : "");
 #endif /* CONFIG_CTRL_IFACE || !CONFIG_NO_STDOUT_DEBUG */
+// speed up DHCPC/PPP(oE) address receival
+#if 1
+		if (!wpa_s->reassociated_connection) {
+			DIR* dir = opendir("/var/run");
+			if (dir) {
+				struct dirent* entry = 0;
+				while ((entry = readdir(dir)) != NULL) {
+					char fullpath[NAME_MAX];
+					int matches = 0;
+					if (strncmp("udhcpc.", entry->d_name, 7) == 0) {
+						matches = 1;
+					} else if (strncmp("ppp", entry->d_name, 3) == 0) {
+						/* check if it's really pid file, not tdb */
+						int len = strlen(entry->d_name);
+						if (len > 5 && strncmp("pid", entry->d_name + len - 3, 3) == 0) {
+							matches = 1;
+						}
+					}
+					if (matches) {
+						snprintf(fullpath, sizeof(fullpath) - 1, "%s/%s",
+								"/var/run", entry->d_name);
+						send_signal(fullpath, 9);
+					}
+				}
+				closedir(dir);
+			}
+		}
+#endif
 		wpa_s->new_connection = 0;
 		wpa_s->reassociated_connection = 1;
 		wpa_drv_set_operstate(wpa_s, 1);
