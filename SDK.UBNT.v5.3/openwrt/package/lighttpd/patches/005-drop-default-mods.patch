--- a/src/configfile.c
+++ b/src/configfile.c
@@ -1110,39 +1110,43 @@ int config_read(server *srv, const char
 		if (modules->type != TYPE_ARRAY) {
 			fprintf(stderr, "server.modules must be an array");
 			return -1;
 		}
 
 		prepends = data_array_init();
 
+#if 0
 		/* prepend default modules */
 		if (NULL == array_get_element(modules->value, "mod_indexfile")) {
 			ds = data_string_init();
 			buffer_copy_string_len(ds->value, CONST_STR_LEN("mod_indexfile"));
 			array_insert_unique(prepends->value, (data_unset *)ds);
 		}
+#endif
 
 		prepends = (data_array *)configparser_merge_data((data_unset *)prepends, (data_unset *)modules);
 		buffer_copy_string_buffer(prepends->key, modules->key);
 		array_replace(srv->config, (data_unset *)prepends);
 		modules->free((data_unset *)modules);
 		modules = prepends;
 
+#if 0
 		/* append default modules */
 		if (NULL == array_get_element(modules->value, "mod_dirlisting")) {
 			ds = data_string_init();
 			buffer_copy_string_len(ds->value, CONST_STR_LEN("mod_dirlisting"));
 			array_insert_unique(modules->value, (data_unset *)ds);
 		}
 
 		if (NULL == array_get_element(modules->value, "mod_staticfile")) {
 			ds = data_string_init();
 			buffer_copy_string_len(ds->value, CONST_STR_LEN("mod_staticfile"));
 			array_insert_unique(modules->value, (data_unset *)ds);
 		}
+#endif
 	} else {
 		data_string *ds;
 
 		modules = data_array_init();
 
 		/* server.modules is not set */
 		ds = data_string_init();
