--- a/net/bridge/br_device.c
+++ b/net/bridge/br_device.c
@@ -78,14 +78,30 @@ static int br_change_mtu(struct net_devi
 	if (new_mtu < 68 || new_mtu > br_min_mtu(netdev_priv(dev)))
 		return -EINVAL;
 
 	dev->mtu = new_mtu;
 	return 0;
 }
 
+/* Allow setting mac address to any valid ethernet address. */
+static int br_set_mac_address(struct net_device *dev, void *p)
+{
+	struct net_bridge *br = netdev_priv(dev);
+	struct sockaddr *addr = p;
+
+	spin_lock_bh(&br->lock);
+	memcpy(dev->dev_addr, addr->sa_data, ETH_ALEN);
+	br_stp_change_bridge_id(br, addr->sa_data);
+	br->flags |= BR_SET_MAC_ADDR;
+	spin_unlock_bh(&br->lock);
+
+	return 0;
+}
+
+
 void br_dev_setup(struct net_device *dev)
 {
 	memset(dev->dev_addr, 0, ETH_ALEN);
 
 	ether_setup(dev);
 
 	dev->do_ioctl = br_dev_ioctl;
@@ -94,11 +110,11 @@ void br_dev_setup(struct net_device *dev
 	dev->open = br_dev_open;
 	dev->set_multicast_list = br_dev_set_multicast_list;
 	dev->change_mtu = br_change_mtu;
 	dev->destructor = free_netdev;
 	SET_MODULE_OWNER(dev);
 	dev->stop = br_dev_stop;
 	dev->tx_queue_len = 0;
-	dev->set_mac_address = NULL;
+	dev->set_mac_address = br_set_mac_address;
 	dev->priv_flags = IFF_EBRIDGE;
 	dev->hard_header_len = 64;
 }
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -90,14 +90,16 @@ struct net_bridge
 	spinlock_t			lock;
 	struct list_head		port_list;
 	struct net_device		*dev;
 	struct net_device_stats		statistics;
 	spinlock_t			hash_lock;
 	struct hlist_head		hash[BR_HASH_SIZE];
 	struct list_head		age_list;
+	unsigned long			flags;
+#define BR_SET_MAC_ADDR		0x00000001
 
 	/* STP */
 	bridge_id			designated_root;
 	bridge_id			bridge_id;
 	u32				root_path_cost;
 	unsigned long			max_age;
 	unsigned long			hello_time;
--- a/net/bridge/br_stp_if.c
+++ b/net/bridge/br_stp_if.c
@@ -116,15 +116,15 @@ void br_stp_disable_port(struct net_brid
 	br_port_state_selection(br);
 
 	if (br_is_root_bridge(br) && !wasroot)
 		br_become_root_bridge(br);
 }
 
 /* called under bridge lock */
-static void br_stp_change_bridge_id(struct net_bridge *br, 
+void br_stp_change_bridge_id(struct net_bridge *br,
 				    const unsigned char *addr)
 {
 	unsigned char oldaddr[6];
 	struct net_bridge_port *p;
 	int wasroot;
 
 	wasroot = br_is_root_bridge(br);
@@ -152,14 +152,18 @@ static const unsigned char br_mac_zero[6
 
 /* called under bridge lock */
 void br_stp_recalculate_bridge_id(struct net_bridge *br)
 {
 	const unsigned char *addr = br_mac_zero;
 	struct net_bridge_port *p;
 
+	/* user has chosen a value so keep it */
+	if (br->flags & BR_SET_MAC_ADDR)
+		return;
+
 	list_for_each_entry(p, &br->port_list, list) {
 		if (addr == br_mac_zero ||
 		    memcmp(p->dev->dev_addr, addr, ETH_ALEN) < 0)
 			addr = p->dev->dev_addr;
 
 	}
 
